@page "/categories"
@inject NavigationManager NavigationManager
@inject UseCases.UseCaseInterfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.UseCaseInterfaces.IDeleteCategoryUsecase DeleteCategoryUseCase

<h3>Manage Categories</h3>


@if (categories != null)
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td class="btn-info border-1 border-secondary m-2 p-2">@category.Name</td>
                    <td class="btn-info border-1 border-secondary m-2 p-2">@category.Description</td>
                    <td>
                        <button type="button" @onclick="@(()=>EditCategory(category))" class="btn btn-link">Edit</button>
                        <button type="button" @onclick="@(()=>DeleteCategory(category.CategoryId))" class="btn btn-danger">Delete</button>
                        </td>
                </tr>
            }

        </tbody>
    </table>
    <br />
   <button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>
}



@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }
    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }
    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }
    private void LoadCategories()
    {
        categories = ViewCategoryUseCase.Execute()?.ToList();
    }

}
